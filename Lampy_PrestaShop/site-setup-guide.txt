Stworzenie strony od podstaw:
Początkowy.
docker-compose:

version: '3.8'

services:
  db:
    image: mysql:5.7
    volumes:
      - ./db-dumps:/docker-entrypoint-initdb.d
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: lights-shop
      

  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      ports:
        -  8080:80
      env_file:
        - .env
      environment:
        PMA_HOST: db


  prestashop:
    depends_on:
      - db
    image: prestashop/prestashop:1.7.7.8
    ports:
      - 80:80
    restart: always
    environment:
      PS_INSTALL_AUTO: 0
      PS_ERASE_DB: 0
      DB_SERVER: db
      DB_USER: root
      DB_PASSWD: root
      DB_NAME: lights-shop
      PS_DEV_MODE: 0
      PS_DOMAIN: localhost:80
    volumes:
      - /var/www/html


Wykonujemy docker-compose up -d

Wchodzimy na localhost i przechodzimy przez proces konfiguracji strony. 

Wchodzimy do kontenera prestashop i usuwamy folder install komendą:

rm -rf install

Zapisujemy obraz prestashop (do backupa):
    
    Szukamy id kontenera:

        docker ps -a

    zazwyczaj jest to ciąg liter i cyfr - bierzemy 3 pierwsze znaki i wywołujemy komende


    docker commit {te 3 znaki} {nazwaobrazu}

    np. docker commit f3c lights-shop


    zapisujemy obraz do pliku (aby móc go komuś przekazać w razie potrzeby albo do backupu):

    docker save lights-shop > {nazwa-pliku}

    (
    zeby go wczytac do dockera

    docker load ...
    )
    
    Kopiujemy zawartość folderu z plikami strony w kontenerze na nasz dysk

    docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH

    np. docker cp f3c:/var/www/html ./webdump

    Wyłączamy kontener i zmieniamy w docker-compose volume prestashopa na 
    
    - ./webshop:/var/www/html

    Kopiujemy zawartość webdump do webshop. 

    docker-compose up -d 

    Happy running site :)




